WITH STACKLINE_RETAILERS AS 
(SELECT DISTINCT * FROM
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".SALES
  WHERE WEEKID >= 202201
UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".RATINGSREVIEWS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".CONTENTSCORE
  WHERE WEEKID >= 202201
 )
)


SELECT 'STACKLINE' AS {{var('column_srcsyskey')}},
    md5(CONCAT(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,R.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID,P.RETAILERID,R.RETAILERID,CS.RETAILERID,RR.RETAILERID::VARCHAR,''),'~',COALESCE(SA.WEEKID,P.WEEKID,R.WEEKID,CS.WEEKID,RR.WEEKID::VARCHAR,''))) AS  {{var('column_rechashkey')}},
    COALESCE(SA.LOADDTS,P.LOADDTS,CS.LOADDTS,RR.LOADDTS) AS       {{var('column_vereffdte')}},
    COALESCE(SA.LOADDTS,P.LOADDTS,CS.LOADDTS,RR.LOADDTS) AS     {{var('column_SRC_RCRD_UPD_DTE')}},
    COALESCE(SA.EVENTDTS,P.EVENTDTS,CS.EVENTDTS,RR.EVENTDTS) AS      {{var('column_SRC_RCRD_CREATE_DTE')}},
    To_date('9999.12.31', 'YYYY.MM.DD') AS {{var('column_verexpirydt')}},
    {{var('default_y')}} as {{var('column_currrecflag')}},
    {{var('default_n')}} as {{var('column_orprecflag')}},
    {{var('default_n')}} as {{var('column_DEL_FROM_SRC_FLAG')}},
    '{{model.name}}'  AS {{var('column_ETL_INS_PID')}},
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ  AS {{var('column_ETL_INS_DTE')}},
    '{{model.name}}'   AS {{var('column_ETL_UPD_PID')}},
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ  AS {{var('column_ETL_UPD_DTE')}},
    (CONCAT(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID::VARCHAR,''),'~',COALESCE(SA.WEEKID,P.WEEKID,CS.WEEKID,RR.WEEKID::VARCHAR,'')))  AS PRC_COMPTTR_SLS_KEY,
    (CONCAT(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID::VARCHAR,''))) AS PROD_KEY, 
    COALESCE(SA.UPC,P.UPC,CS.UPC,RR.UPC) AS PROD_EAN,
    IFF( SUBSTR(SA.WEEKID, 5) = 1, TO_DATE( SUBSTR(SA.WEEKID, 1, 4), 'YYYY'), DATEADD( WEEK, SUBSTR(SA.WEEKID, 5)-2, DATEADD( DAY, 1, LAST_DAY(TO_DATE( SUBSTR(SA.WEEKID, 1, 4) , 'YYYY'), WEEK) )  )) as PRC_EFF_START_DTE, 
    DATEADD( day, 6, IFF( SUBSTR(SA.WEEKENDING, 5) = 1, TO_DATE( SUBSTR(SA.WEEKENDING, 1, 4), 'YYYY'), DATEADD( week, SUBSTR(SA.WEEKENDING, 5)-2, DATEADD( day, 1, LAST_DAY(TO_DATE( SUBSTR(SA.WEEKENDING, 1, 4) , 'YYYY'), week) )  )) ) AS PRC_EFF_END_DTE,
    COALESCE(SA.MODELNUMBER,P.MODELNUMBER,CS.MODELNUMBER,RR.MODELNUMBER) AS COMPTTR_PROD_NBR,
    COALESCE(SA.TITLE,P.TITLE,CS.TITLE,RR.TITLE) AS COMPTTR_PROD_DESC,
    COALESCE(SA.BRAND,P.BRAND,CS.BRAND,RR.BRAND) AS BRAND_NAME,
    P.PROMOTYPE AS SLS_PROMO_TYPE,
    P.DEALDATE AS SLS_PROMO_EVNT_START_DTE,
    NVL(COALESCE(SA.RETAILPRICE,P.RETAILPRICE),0) AS COMPTTR_PROD_PRC,
    COALESCE(SA.TITLE,P.TITLE,CS.TITLE,RR.TITLE) AS SBD_PROD_DESC,
    NVL(P.RETAILSALESCHANGE,0) AS RTL_SLS_CHNG,
    NVL(P.RETAILPRICECHANGE,0) AS RTL_PRC_CHNG,
    COALESCE(SA.RETAILERNAME,P.RETAILERNAME,CS.RETAILERNAME,RR.RETAILERNAME) as ONLINE_SELLER_NAME,
    COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU) as ONLINE_PROD_CD,
    NVL(RR.RATING,0) AS RATING,
    NVL(RR.REVIEWSCOUNT,0) AS REVIEW_COUNT,
    NVL(COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID),0) AS SELLER_ID,
    COALESCE(SA.RETAILERNAME,P.RETAILERNAME,CS.RETAILERNAME,RR.RETAILERNAME) as SELLER_NAME,
    COALESCE(SA.CATEGORY,P.CATEGORY,CS.CATEGORY,RR.CATEGORY) AS CTGY_NAME,
    COALESCE(SA.SUBCATEGORY,P.SUBCATEGORY,CS.SUBCATEGORY,RR.SUBCATEGORY) AS SUB_CTGY,
    NVL(COALESCE(SA.UNITSSOLD,P.UNITSSOLD),0) AS SOLD_QTY,
    NVL(COALESCE(SA.RETAILSALES,P.RETAILSALES,CS.RETAILSALES,RR.RETAILSALES),0) AS TOT_PRC,
    NVL(P.UNITSSOLDCHANGE,0) AS UNITS_SOLD_CHNG
    
FROM STACKLINE_RETAILERS AS R 
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".SALES SA
              ON R.RETAILERID = SA.RETAILERID
             AND R.RETAILERSKU = SA.RETAILERSKU
             AND R.WEEKID = SA.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".RATINGSREVIEWS RR
              ON R.RETAILERID = RR.RETAILERID
             AND R.RETAILERSKU = RR.RETAILERSKU
             AND R.WEEKID = RR.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".CONTENTSCORE CS
              ON R.RETAILERID = CS.RETAILERID
             AND R.RETAILERSKU = CS.RETAILERSKU
             AND R.WEEKID = CS.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".PROMOTIONS P
              ON R.RETAILERID = P.RETAILERID
             AND R.RETAILERSKU = P.RETAILERSKU 

 

test code 
CREATE OR REPLACE TABLE DEV_EDW.PUBLIC.STACKLINE_NEW AS 
SELECT 'STACKLINE' AS column_srcsyskey,
    concat(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,R.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU,SA.RETAILERID,P.RETAILERID,R.RETAILERID,CS.RETAILERID,RR.RETAILERID,SA.WEEKID,P.WEEKID,R.WEEKID,CS.WEEKID,RR.WEEKID))as column_rechashkey,
    COALESCE(SA.LOADDTS,P.LOADDTS,CS.LOADDTS,RR.LOADDTS) AS column_vereffdte,
    COALESCE(SA.LOADDTS,P.LOADDTS,CS.LOADDTS,RR.LOADDTS) AS column_SRC_RCRD_UPD_DTE,
    COALESCE(SA.EVENTDTS,P.EVENTDTS,CS.EVENTDTS,RR.EVENTDTS) AS  column_SRC_RCRD_CREATE_DTE,
    To_date('9999.12.31', 'YYYY.MM.DD') AS column_verexpirydt,
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ  AS column_ETL_INS_DTE,
    (CONCAT(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID::VARCHAR,''),'~',COALESCE(SA.WEEKID,P.WEEKID,CS.WEEKID,RR.WEEKID::VARCHAR,'')))  AS PRC_COMPTTR_SLS_KEY,
    (CONCAT(COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID::VARCHAR,''))) AS PROD_KEY, 
    COALESCE(SA.UPC,P.UPC,CS.UPC,RR.UPC) AS PROD_EAN,
    IFF( SUBSTR(SA.WEEKID, 5) = 1, TO_DATE( SUBSTR(SA.WEEKID, 1, 4), 'YYYY'), DATEADD( WEEK, SUBSTR(SA.WEEKID, 5)-2, DATEADD( DAY, 1, LAST_DAY(TO_DATE( SUBSTR(SA.WEEKID, 1, 4) , 'YYYY'), WEEK) )  )) as PRC_EFF_START_DTE, 
    DATEADD( day, 6, IFF( SUBSTR(SA.WEEKENDING, 5) = 1, TO_DATE( SUBSTR(SA.WEEKENDING, 1, 4), 'YYYY'), DATEADD( week, SUBSTR(SA.WEEKENDING, 5)-2, DATEADD( day, 1, LAST_DAY(TO_DATE( SUBSTR(SA.WEEKENDING, 1, 4) , 'YYYY'), week) )  )) ) AS PRC_EFF_END_DTE,
    COALESCE(SA.MODELNUMBER,P.MODELNUMBER,CS.MODELNUMBER,RR.MODELNUMBER) AS COMPTTR_PROD_NBR,
    COALESCE(SA.TITLE,P.TITLE,CS.TITLE,RR.TITLE) AS COMPTTR_PROD_DESC,
    COALESCE(SA.BRAND,P.BRAND,CS.BRAND,RR.BRAND) AS BRAND_NAME,
    P.PROMOTYPE AS SLS_PROMO_TYPE,
    P.DEALDATE AS SLS_PROMO_EVNT_START_DTE,
    NVL(COALESCE(SA.RETAILPRICE,P.RETAILPRICE),0) AS COMPTTR_PROD_PRC,
    COALESCE(SA.TITLE,P.TITLE,CS.TITLE,RR.TITLE) AS SBD_PROD_DESC,
    NVL(P.RETAILSALESCHANGE,0) AS RTL_SLS_CHNG,
    NVL(P.RETAILPRICECHANGE,0) AS RTL_PRC_CHNG,
    COALESCE(SA.RETAILERNAME,P.RETAILERNAME,CS.RETAILERNAME,RR.RETAILERNAME) as ONLINE_SELLER_NAME,
    COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU) as ONLINE_PROD_CD,
    NVL(RR.RATING,0) AS RATING,
    NVL(RR.REVIEWSCOUNT,0) AS REVIEW_COUNT,
    NVL(COALESCE(SA.RETAILERID,P.RETAILERID,CS.RETAILERID,RR.RETAILERID),0) AS SELLER_ID,
    COALESCE(SA.RETAILERNAME,P.RETAILERNAME,CS.RETAILERNAME,RR.RETAILERNAME) as SELLER_NAME,
    COALESCE(SA.CATEGORY,P.CATEGORY,CS.CATEGORY,RR.CATEGORY) AS CTGY_NAME,
    COALESCE(SA.SUBCATEGORY,P.SUBCATEGORY,CS.SUBCATEGORY,RR.SUBCATEGORY) AS SUB_CTGY,
    NVL(COALESCE(SA.UNITSSOLD,P.UNITSSOLD),0) AS SOLD_QTY,
    NVL(COALESCE(SA.RETAILSALES,P.RETAILSALES,CS.RETAILSALES,RR.RETAILSALES),0) AS TOT_PRC,
    NVL(P.UNITSSOLDCHANGE,0) AS UNITS_SOLD_CHNG
 
    FROM STACKLINE_RETAILERS AS R 
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".SALES SA
              ON R.RETAILERID = SA.RETAILERID
             AND R.RETAILERSKU = SA.RETAILERSKU
             AND R.WEEKID = SA.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".RATINGSREVIEWS RR
              ON R.RETAILERID = RR.RETAILERID
             AND R.RETAILERSKU = RR.RETAILERSKU
             AND R.WEEKID = RR.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".CONTENTSCORE CS
              ON R.RETAILERID = CS.RETAILERID
             AND R.RETAILERSKU = CS.RETAILERSKU
             AND R.WEEKID = CS.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".PROMOTIONS P
              ON R.RETAILERID = P.RETAILERID
             AND R.RETAILERSKU = P.RETAILERSKU 

test code 2:
CREATE OR REPLACE TABLE DEV_EDW.PUBLIC.STACKLINE_NEW AS 
SELECT 'STACKLINE' AS column_srcsyskey,
    (CONCAT(R.RETAILERID,R.RETAILERSKU,R.WEEKID))as column_rechashkey,
    COALESCE(SA.RETAILERSKU,P.RETAILERSKU,CS.RETAILERSKU,RR.RETAILERSKU) AS PRC_COMPTTR_SLS_KEY
FROM STACKLINE_RETAILERS AS R 
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".SALES SA
              ON R.RETAILERID = SA.RETAILERID
             AND R.RETAILERSKU = SA.RETAILERSKU
             AND R.WEEKID = SA.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".RATINGSREVIEWS RR
              ON R.RETAILERID = RR.RETAILERID
             AND R.RETAILERSKU = RR.RETAILERSKU
             AND R.WEEKID = RR.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".CONTENTSCORE CS
              ON R.RETAILERID = CS.RETAILERID
             AND R.RETAILERSKU = CS.RETAILERSKU
             AND R.WEEKID = CS.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".PROMOTIONS P
              ON R.RETAILERID = P.RETAILERID
             AND R.RETAILERSKU = P.RETAILERSKU 

with clause code:
WITH STACKLINE_RETAILERS AS 
(SELECT DISTINCT * FROM
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID::VARCHAR AS WEEKID
  FROM "PROD_RAW"."STACKLINE".SALES
  WHERE WEEKID >= 202201
 UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID::VARCHAR AS WEEKID
  FROM "PROD_RAW"."STACKLINE".RATINGSREVIEWS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID::VARCHAR AS WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
SELECT RETAILERID,
         RETAILERSKU,
         WEEKID::VARCHAR AS WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID::VARCHAR AS WEEKID
  FROM "PROD_RAW"."STACKLINE".CONTENTSCORE
  WHERE WEEKID >= 202201

)
 )

tried this code :
case when length(trim(R.RETAILERSKU)) <1 AND length(trim(R.RETAILERID)) <1 then {{var('default_mapkey')}}
         when R.RETAILERSKU IS NULL AND R.RETAILERID  IS NULL then {{var('default_mapkey')}} else R.RETAILERSKU AND R.RETAILERID end as PROD_KEY,
    
got boolean not recognized error
 SELECT * FROM STACKLINE_RETAILERS


SALES:
NUMBER DATA TYPE
RETAILSALES
RETAILERID
WEEKID
UNITSSOLD
RETAILPRICE


PROMOTIONS:
WEEKID
RETAILERID
RETAILSALESCHANGE
RETAILERSALES
UNITSOLD
RETAILERPRICE
UNITSOLDCHANGE
RETAILPRICECHANGE

CONTENTSCORE
WEEKID
RETAILERID
RETAILSALES

RATINGREVIEWS
RETAILERID
WEEKID
RETAILERSALES
REVIEWSCOUNT
RATING

select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(WEEKID) IS  NULL 
 LIMIT 10
 select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(RETAILERID) IS  NULL 
 LIMIT 10
 select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(RETAILSALES) IS  NULL  
 LIMIT 10
(SQL compilation error: Function TRY_CAST cannot be used with arguments of types NUMBER(38,10) and NUMBER(38,0)

 select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(UNITSSOLD) IS  NULL 
 LIMIT 10

 select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(RETAILPRICE) IS  NULL 
 LIMIT 10
SQL compilation error: Function TRY_CAST cannot be used with arguments of types NUMBER(38,10) and NUMBER(38,0)

 select * from "PROD_RAW"."STACKLINE"."SALES" WHERE TRY_TO_NUMBER(RETAILERSKU) IS  NULL 
 LIMIT 10
 