SALES:
PROMO_TYPE  AS SLS_PROMO_TYPE,
    DEAL_DATE AS SLS_PROMO_EVNT_START_DTE,
    RETAILPRICECHANGE AS RTL_PRC_CHNG,
    RETAILSALESCHANGE AS RTL_SLS_CHNG,
    UNITSSOLDCHANGE AS UNITS_SOLD_CHNG,
RATING AS RATING,
    REVIEWSCOUNT AS REVIEW_COUNT

PROMOTINS:
SELECT 'STACKLINE' AS {{var('column_srcsyskey')}},
    md5(CONCAT(COALESCE(P.RETAILERSKU::VARCHAR,''),'~',COALESCE(P.RETAILERID::VARCHAR,''),'~',COALESCE(P.WEEKID::VARCHAR,''))) AS  {{var('column_rechashkey')}},
    P.LOADDTS AS       {{var('column_vereffdte')}},
    P.LOADDTS AS       {{var('column_SRC_RCRD_UPD_DTE')}},
    P.EVENTDTS AS      {{var('column_SRC_RCRD_CREATE_DTE')}},
    To_date('9999.12.31', 'YYYY.MM.DD') AS {{var('column_verexpirydt')}},
    {{var('default_y')}} as {{var('column_currrecflag')}},
    {{var('default_n')}} as {{var('column_orprecflag')}},
    {{var('default_n')}} as {{var('column_DEL_FROM_SRC_FLAG')}},
    '{{model.name}}'  AS {{var('column_ETL_INS_PID')}},
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ  AS {{var('column_ETL_INS_DTE')}},
    '{{model.name}}'   AS {{var('column_ETL_UPD_PID')}},
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ  AS {{var('column_ETL_UPD_DTE')}},
    (CONCAT(COALESCE(SA.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID::VARCHAR,''),'~',COALESCE(SA.WEEKID::VARCHAR,'')))  AS PRC_COMPTTR_SLS_KEY,
    (CONCAT(COALESCE(SA.RETAILERSKU::VARCHAR,''),'~',COALESCE(SA.RETAILERID::VARCHAR,''))) AS PROD_KEY, 
    P.RETAILERID AS SELLER_ID,
    P.RETAILERNAME as SELLER_NAME,
    P.RETAILERSKU as ONLINE_PROD_CD,
    P.UPC AS PROD_EAN,
    P.MODELNUMBER AS COMPTTR_PROD_NBR,
    P.TITLE AS COMPTTR_PROD_DESC,
    P.BRAND AS BRAND_NAME,
    P.CATEGORY AS CTGY_NAME,
    P.SUBCATEGORY AS SUB_CTGY,
    IFF( SUBSTR(P.WEEKID, 5) = 1, TO_DATE( SUBSTR(P.WEEKID, 1, 4), 'YYYY'), DATEADD( WEEK, SUBSTR(P.WEEKID, 5)-2, DATEADD( DAY, 1, LAST_DAY(TO_DATE( SUBSTR(P.WEEKID, 1, 4) , 'YYYY'), WEEK) )  )) as PRC_EFF_START_DTE, 
    DATEADD( day, 6, IFF( SUBSTR(P.WEEKENDING, 5) = 1, TO_DATE( SUBSTR(P.WEEKENDING, 1, 4), 'YYYY'), DATEADD( week, SUBSTR(P.WEEKENDING, 5)-2, DATEADD( day, 1, LAST_DAY(TO_DATE( SUBSTR(P.WEEKENDING, 1, 4) , 'YYYY'), week) )  )) ) AS PRC_EFF_END_DTE,
    P.PROMOTYPE  AS SLS_PROMO_TYPE,
    P.DEALDATE AS SLS_PROMO_EVNT_START_DTE,
    P.RETAILPRICE AS COMPTTR_PROD_PRC,
    P.RETAILPRICECHANGE AS RTL_PRC_CHNG,
    P.RETAILSALES AS TOT_PRC,
    P.RETAILSALESCHANGE AS RTL_SLS_CHNG,
    P.UNITSSOLDCHANGE AS UNITS_SOLD_CHNG,
    P.UNITSSOLD AS SOLD_QTY,
    P.RETAILSALES AS TOT_PRC

CONTENTSCORE:
AND R.PROMOTYPE = CS.PROMOTYPE
              AND R.DEALDATE = CS.DEALDATE
              AND R.RETAILPRICE = CS.RETAILPRICE
              AND R.TITLE = CS.TITLE
              AND R.RETAILPRICECHANGE = CS.RETAILPRICECHANGE
              AND R.RETAILSALESCHANGE = CS.RETAILSALESCHANGE
              AND R.RETAILERNAME = CS.RETAILERNAME
              AND R.RETAILERSKU = CS.RETAILERSKU
              AND R.RATING = CS.RATING
              AND R.REVIEWSCOUNT = CS.REVIEWSCOUNT
              AND R.RETAILERID = CS.RETAILERID
              AND R.RETAILERNAME = CS.RETAILERNAME
              AND R.CATEGORY= CS.CATEGORY
              AND R.SUBCATEGORY= CS.SUBCATEGORY
              AND R.UNITSSOLD = CS.UNITSSOLD
              AND R.RETAILSALES = CS.RETAILSALES
              AND R.UNITSSOLDCHANGE = CS.UNITSSOLDCHANGE


    md5(CONCAT(COALESCE(P.RETAILERSKU::VARCHAR,''),'~',COALESCE(P.RETAILERID::VARCHAR,''),'~',COALESCE(P.WEEKID::VARCHAR,''))) AS  {{var('column_rechashkey')}},
(WHEN I TRY TO EXECUTE WITH THIS COLUMN ) IT SHOWING DUPLCATE COL

CREATE OR REPLACE TABLE DEV_EDW.PUBLIC.STACKLINE_RETAILERS AS
SELECT DISTINCT * FROM
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".SALES
  WHERE WEEKID >= 202201
UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".RATINGSREVIEWS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".PROMOTIONS
  WHERE WEEKID >= 202201
  UNION ALL
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE".CONTENTSCORE
  WHERE WEEKID >= 202201
 );

CREATE OR REPLACE TABLE DEV_EDW.PUBLIC.STACKLINE_CONSOLIDATED AS (
  SELECT R.RETAILERID,
         COALESCE(S.RETAILERNAME, RV.RETAILERNAME, CS.RETAILERNAME, P.RETAILERNAME) AS RETAILERNAME,
         R.RETAILERSKU,
         COALESCE(S.UPC, RV.UPC, CS.UPC, P.UPC) AS UPC,
         COALESCE(S.MODELNUMBER, RV.MODELNUMBER, CS.MODELNUMBER, P.MODELNUMBER) AS MODELNUMBER,
         COALESCE(S.TITLE, RV.TITLE, CS.TITLE, P.TITLE) AS TITLE,
         COALESCE(S.BRAND, RV.BRAND, CS.BRAND, P.BRAND) AS BRAND,
         COALESCE(S.CATEGORY, RV.CATEGORY, CS.CATEGORY, P.CATEGORY) AS CATEGORY,
         COALESCE(S.SUBCATEGORY, RV.SUBCATEGORY, CS.SUBCATEGORY, P.SUBCATEGORY) AS SUBCATEGORY,
         R.WEEKID,
         COALESCE(S.WEEKENDING, RV.WEEKENDING, CS.WEEKENDING, P.WEEKENDING) AS WEEKENDING,
         P.PROMOTYPE AS PROMOTYPE,
P.DEALDATE AS DEALDATE,
         COALESCE(S.RETAILPRICE, P.RETAILPRICE) AS RETAILPRICE,
         P.RETAILPRICECHANGE AS RETAILPRICECHANGE,
         P.RETAILSALESCHANGE AS RETAILSALESCHANGE,
         COALESCE(S.UNITSSOLD, P.UNITSSOLD) AS UNITSSOLD,
         P.UNITSSOLDCHANGE AS UNITSSOLDCHANGE,
         COALESCE(S.RETAILSALES, RV.RETAILSALES, CS.RETAILSALES, P.RETAILSALES) AS RETAILSALES,
         RV.RATING AS RATING,
         RV.REVIEWSCOUNT AS REVIEWSCOUNT
  FROM DEV_EDW.PUBLIC.STACKLINE_RETAILERS R 
LEFT OUTER JOIN "PROD_RAW"."STACKLINE".SALES S
              ON R.RETAILERID = S.RETAILERID
             AND R.RETAILERSKU = S.RETAILERSKU
             AND R.WEEKID = S.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".RATINGSREVIEWS RV
              ON R.RETAILERID = RV.RETAILERID
             AND R.RETAILERSKU = RV.RETAILERSKU
             AND R.WEEKID = RV.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".CONTENTSCORE CS
              ON R.RETAILERID = CS.RETAILERID
             AND R.RETAILERSKU = CS.RETAILERSKU
             AND R.WEEKID = CS.WEEKID
         LEFT OUTER JOIN "PROD_RAW"."STACKLINE".PROMOTIONS P
              ON R.RETAILERID = P.RETAILERID




NOTE : CREATED STACKILINE_RETAILERS TABLE (CLONED FROM DEV_RAW)
2. not able to do weekid and weekending for other tables
3. ZONE3_LOD_DTE,currentcy_key (not in all the tables)
4.BRAND_LKEY
5.COMPTTR_BRAND_LKEY
6.CUST_CHNL_LKEY
7.SBU_LKEY
8.SLS_PROMO_TYPE
SLS_PROMO_EVNT_START_DTE
SLS_PROMO_END_MAP_DTE
SLS_PROMO_START_DTE
SLS_PROMO_END_DTE
(except 8, start_date) for P
9.COMPTTR_PROD_PRC_USD
10. COMPTTR_PROD_BASE_PRC
11. COMPTTR_PROMO_PRC
12. VAT_PRC
13. PROD_BASE_PRC
14. PROD_LIST_PRC
15. PROD_LIST_PRC_USD
16. VAT_PROMO_PRC
17. VAT_LIST_PRC
18.COMPTTR_STORE_NAME
19.PRC_AVAILABILITY_FLAG
20.PRC_BUYOUT_FLAG
21.PRC_UNAVAILABILITY_DAYS 
22.TOT_USD_PRC
23.TOT_USD_PRC
PRC_FBA
PRC_ID
URL 
PRIME  Price
WHOLESALE_PRICE_PVD
RETAIL_PRICE_PVP
PVP_TOTAL
SHIPPING 
STOCK Availability
PVDR
PVPR
SELLER_CITY
SELLER_STATE
STORE_ID
SELLER_URL
SELLER_TYP_ID
SELLER_TYP_NAME
CTGY_ID
ORIG_QTY
AVAIL_QTY
CONV_RATE
SBD_SELL_PRC
MAP_PRICE
MAPP_POLICY(PROWL)

    NVL(SA.RETAILSALES,P.RETAILSALES,CS.RETAILSALES,RR.RETAILSALES,0) AS TOT_PRC,
this is missed for now
later to be added