USE DATABASE PROD_EDW
USE WAREHOUSE 
USE SCHEMA CONSOLIDATED

-- PROWL TARGET COUNT
select country_iso_code, count(*) AS TARGET_COUNT
from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
where SRC_SYS_KEY = 'PROWL'
group by 1
limit 10;

select 'CA', COUNT(*) AS ROW_CNT
from PROD_RAW.prowl.VW_PROWL_FULL_URL_LIST_CANADA WHERE REPORTS = 'Y'
UNION ALL
select 'US', COUNT(*) AS ROW_CNT
from PROD_RAW.prowl.VW_PROWL_FULL_URL_LIST_US WHERE REPORTS = 'Y';

select * from (select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY from  DEV_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
where PRC_COMPTTR_SLS_KEY is null and SRC_SYS_KEY IS null and SRC_SYS_KEY = 'PROWL' ) 

--CHK FOR DUPLICATES
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,COUNT(*) from  PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
where PRC_COMPTTR_SLS_KEY is  null and SRC_SYS_KEY IS null and SRC_SYS_KEY = 'STACKLINE' GROUP BY 1,2

-- chck for flags and expiry date
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,min(EFF_DTE), max(EXPR_DTE),CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG
from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
group by PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG HAVING SRC_SYS_KEY = 'STACKLINE'

-- chk for currency and loaddts (DETLA LOAD)
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,ZONE3_LOD_DTE as LOADDTS,CRNCY_KEY
from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
group by PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,ZONE3_LOD_DTE,CRNCY_KEY 
HAVING SRC_SYS_KEY = 'PROWL'AND LOADDTS >= '2022-11-03 15:10:21.845'

select * from PROD_RAW.prowl.VW_PROWL_FULL_URL_LIST_CANADA WHERE WEEK_ID = 202223 AND  REPORTS = 'Y';
SELECT * FROM PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES WHERE SRC_SYS_KEY = 'STACKLINE' AND PRC_EFF_START_DTE BETWEEN 
'2022-06-06' AND '2022-06-12' LIMIT 10

DESC TABLE PROD_RAW.SEQUENTUM.VW_AMAZON_US_COMPR_PRODUCTS 
SELECT * FROM PROD_RAW.SEQUENTUM.VW_AMAZON_US_COMPR_PRODUCTS WHERE RUNDATE BETWEEN '2022-04-01' AND '2022-04-30' 
SELECT * FROM PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES WHERE ZONE3_LOD_DTE BETWEEN '2022-11-01' AND '2022-11-31'
AND SRC_SYS_KEY = 'SEQUENTUM'
SELECT * FROM PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES WHERE ZONE3_LOD_DTE >= '2022-01-01'  
AND SRC_SYS_KEY = 'STACKLINE'

-- SOURCE SOUNT
WITH STACKLINE_RETAILERS AS
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         '#' as SLS_PROMO_TYPE
  FROM "PROD_RAW"."STACKLINE"."SALES"
  -- WHERE WEEKID >= 202231
  UNION
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         PROMOTYPE as SLS_PROMO_TYPE
  FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
  --WHERE WEEKID >= 202231
UNION
SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         '#' as SLS_PROMO_TYPE
  FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
  --WHERE WEEKID >= 202231
  UNION
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         '#' as SLS_PROMO_TYPE
  FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
--  WHERE WEEKID >= 202230
)
SELECT SUM(SOURCE_COUNT) AS PROD_RAW_SOURCE_COUNT,
       SUM(TARGET_COUNT) AS TEST_EDW_TARGET_COUNT
FROM (
SELECT COUNT(*) as SOURCE_COUNT, sum(0) as TARGET_COUNT FROM  STACKLINE_RETAILERS AS R
UNION ALL
SELECT SUM(0) as SOURCE_COUNT, COUNT(*) as TARGET_COUNT FROM DEV_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
  where SRC_SYS_KEY = 'STACKLINE'
    and CURR_RCRD_FLAG = 'Y'
);



--sequentum (source sount)
WITH DEDUPE_SRC_AMZ_US as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_AMAZON_US_COMPR_PRODUCTS
), DEDUPE_SRC_AMZ_CA as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_AMAZON_CA_COMPR_PRODUCTS
  ), DEDUPE_SRC_LS_PRC as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_LOWES_PRICING
), DEDUPE_SRC_HD_PRC as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_HOMEDEPOT_PRICING
), DEDUPE_SRC_HD_COMPR as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_HOMEDEPOT_COMPR_PRODUCTS
), DEDUPE_SRC_LS_COMPR as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_LOWES_COMPR_PRODUCTS
)
SELECT 'AMZ_US', COUNT(*) AS SOURCECOUNT
FROM DEDUPE_SRC_AMZ_US --1
WHERE ROW_NO = 1
UNION ALL
SELECT 'AMZ_CA', COUNT(*)
FROM DEDUPE_SRC_AMZ_CA --2
WHERE ROW_NO = 1
UNION ALL
SELECT 'HD_PRC', COUNT(*)
FROM DEDUPE_SRC_HD_PRC --3
WHERE ROW_NO = 1
UNION ALL
SELECT 'LS_PRC', COUNT(*)
FROM DEDUPE_SRC_LS_PRC --4
WHERE ROW_NO = 1
UNION ALL
SELECT 'HD_COMPR', COUNT(*)
FROM DEDUPE_SRC_HD_COMPR --5
WHERE ROW_NO = 1
UNION ALL
SELECT 'LS_COMPR', COUNT(*)
FROM DEDUPE_SRC_LS_COMPR --6
WHERE ROW_NO = 1;