
use warehouse dev_edw_wh
DESC TABLE "PROD_RAW"."STACKLINE"."SALES"

use database dev_raw
--target count

select PRC_COMPTTR_SLS_KEY, count(*) AS TARGET_COUNT
from test_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
where SRC_SYS_KEY = 'STACKLINE'
group by 1
limit 10;

SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."PROMOTIONS" 
select count(*)  from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE' and CURR_RCRD_FLAG = 'Y' 
select *  from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE' and CURR_RCRD_FLAG = 'Y' limit 10

DESC TABLE TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
select SLS_PROMO_TYPE,RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE' and CURR_RCRD_FLAG = 'Y' AND SLS_PROMO_TYPE IN 
(SELECT PROMOTYPE FROM "PROD_RAW"."STACKLINE"."PROMOTIONS") 


--
with output as (
select RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(S.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(S.RETAILERID::VARCHAR,''),
           '~',COALESCE(S.WEEKID::VARCHAR,''),
           '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."SALES" AS S) 
UNION
select RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(P.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(P.RETAILERID::VARCHAR,''),
           '~',COALESCE(P.WEEKID::VARCHAR,''),
           '~',COALESCE(P.PROMOTYPE::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."PROMOTIONS" AS P) 
UNION 
select RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(R.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(R.RETAILERID::VARCHAR,''),
           '~',COALESCE(R.WEEKID::VARCHAR,''),
             '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS" AS R)
UNION
select RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE' AND RCRD_HASH_KEY  IN 
(SELECT(md5(CONCAT(COALESCE(CS.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(CS.RETAILERID::VARCHAR,''),
           '~',COALESCE(CS.WEEKID::VARCHAR,''),
             '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE" AS CS)
)
SELECT COUNT(*) as SOURCE_COUNT, sum(0) as TARGET_COUNT FROM  output  AS R
UNION ALL
SELECT SUM(0) as SOURCE_COUNT, COUNT(*) as TARGET_COUNT FROM test_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
  where SRC_SYS_KEY = 'STACKLINE'
    and CURR_RCRD_FLAG = 'Y'




SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"

select RCRD_HASH_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'  AND RCRD_HASH_KEY IN 
(SELECT CONCAT(RETAILERSKU,
RETAILERID,
WEEKID) FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS") LIMIT 10

SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."SALES"
SELECT UNIQUE_ID FROM "PROD_RAW"."STACKLINE"."SALES"
USE DATABASE PROD_RAW
--source count
 SELECT S.RETAILERID,
        S.RETAILERSKU,
        S.WEEKID,
        P.RETAILERID,
        P.RETAILERSKU,
        P.WEEKID,
        R.RETAILERID,
        R.RETAILERSKU,
        R.WEEKID,
        CS.RETAILERID,
        CS.RETAILERSKU,
        CS.WEEKID,
 md5(CONCAT(COALESCE(R.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(R.RETAILERID::VARCHAR,''),
           '~',COALESCE(R.WEEKID::VARCHAR,''))) AS  RCRD_HASH_KEY,
            P.PROMOTYPE AS PROMOTIONS_PROMO
            FROM "PROD_RAW"."STACKLINE"."SALES" S LEFT OUTER JOIN "PROD_RAW"."STACKLINE"."PROMOTIONS" P
           ON S.RETAILERID = P.RETAILERID
           AND S.RETAILERSKU = P.RETAILERSKU
           AND S.WEEKID = P.WEEKID
           LEFT OUTER JOIN "PROD_RAW"."STACKLINE"."RATINGSREVIEWS" R
           ON S.RETAILERID = R.RETAILERID
           AND S.RETAILERSKU = R.RETAILERSKU
           AND S.WEEKID = R.WEEKID
          LEFT OUTER JOIN "PROD_RAW"."STACKLINE"."CONTENTSCORE" CS
          ON S.RETAILERID = CS.RETAILERID
          AND S.RETAILERSKU = CS.RETAILERSKU
          AND S.WEEKID = CS.WEEKID


--ORIGINAL CODE WITH ADVANCED
WITH STACKLINE_RETAILERS AS 
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."SALES"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
),
SELECT *  FROM  STACKLINE_RETAILERS AS R

 
           


SELECT S.RETAILERID,
       S.RETAILERSKU,
       S.WEEKID,
       CONCAT(COALESCE(S.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(S.RETAILERID::VARCHAR,''),
           '~',COALESCE(S.WEEKID::VARCHAR,'')) AS SLS_KEY,
       S.RETAILPRICE AS SALES_RETAILPRICE,
       P.RETAILPRICE AS PROMOTIONS_RETAILPRICE,
       P.PROMOTYPE AS PROMOTIONS_PROMO
  FROM "PROD_RAW"."STACKLINE"."SALES" S  CROSS JOIN "PROD_RAW"."STACKLINE"."PROMOTIONS" P
         ON S.RETAILERID = P.RETAILERID
        AND S.RETAILERSKU = P.RETAILERSKU
        AND S.WEEKID = P.WEEKID
   CROSS JOIN "PROD_RAW"."STACKLINE"."RATINGSREVIEWS" R
  ON S.RETAILERID = R.RETAILERID
        AND S.RETAILERSKU = R.RETAILERSKU
        AND S.WEEKID = R.WEEKID
  CROSS JOIN "PROD_RAW"."STACKLINE"."CONTENTSCORE" CS
  ON S.RETAILERID = CS.RETAILERID
        AND S.RETAILERSKU = CS.RETAILERSKU
        AND S.WEEKID = CS.WEEKID
 


 --source coubt
 WITH STACKLINE_RETAILERS AS 
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."SALES"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         PROMOTYPE
  FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
)
SELECT COUNT(*) as SOURCE_COUNT FROM  STACKLINE_RETAILERS AS R


SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
UNION 
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."SALES"
UNION
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
UNION
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"


select "PROD_RAW"."STACKLINE"."PROMOTIONS".RETAILPRICE AS PROMO_RP,
"PROD_RAW"."STACKLINE"."SALES".RETAILPRICE AS SALES_RP
 from "PROD_RAW"."STACKLINE"."PROMOTIONS" INNER JOIN "PROD_RAW"."STACKLINE"."SALES"
 on  "PROD_RAW"."STACKLINE"."PROMOTIONS".WEEKID = "PROD_RAW"."STACKLINE"."SALES".WEEKID  
 AND "PROD_RAW"."STACKLINE"."PROMOTIONS".RETAILERID = "PROD_RAW"."STACKLINE"."SALES".RETAILERID
  AND "PROD_RAW"."STACKLINE"."PROMOTIONS".RETAILERSKU = "PROD_RAW"."STACKLINE"."SALES".RETAILERSKU 
  AND "PROD_RAW"."STACKLINE"."PROMOTIONS".RETAILPRICE <> "PROD_RAW"."STACKLINE"."SALES".RETAILPRICE 
  LIMIT 10
  
  WITH STACKLINE_RETAILERS AS 
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         TO_TIMESTAMP_NTZ(EVENTDTS) as eventdts
         
  FROM "PROD_RAW"."STACKLINE"."SALES"
  WHERE WEEKID >= 202230
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         TO_TIMESTAMP_NTZ(EVENTDTS)
  FROM  "PROD_RAW"."STACKLINE"."PROMOTIONS"
  WHERE WEEKID >= 202230
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         TO_TIMESTAMP_NTZ(EVENTDTS)
  FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
  WHERE WEEKID >= 202230
  UNION
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID,
         TO_TIMESTAMP_NTZ(EVENTDTS)
  FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
  WHERE WEEKID >= 202230
)
 select count(*) from STACKLINE_RETAILERS 



desc table TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
select COUNT(*) as "Target_Count" from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES WHERE SRC_SYS_KEY = 'PROWL'
select *  from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES WHERE SRC_SYS_KEY = 'PROWL'

select PRC_COMPTTR_SLS_KEY from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES where COMPTTR_PROD_PRC = '10.9800000000' limit 20

DESC TABLE prod_raw.prowl.VW_PROWL_FULL_URL_LIST_CANADA
DESC TABLE prod_raw.prowl.VW_PROWL_FULL_URL_LIST_US
select * from prod_raw.prowl.VW_PROWL_FULL_URL_LIST_CANADA

 
 SELECT S.RETAILERID,
       S.RETAILERSKU,
       S.WEEKID,
       S.RETAILPRICE,
       P.RETAILPRICE
  FROM "PROD_RAW"."STACKLINE"."SALES" S INNER JOIN "PROD_RAW"."STACKLINE"."PROMOTIONS" P
         ON S.RETAILERID = P.RETAILERID
        AND S.RETAILERSKU = P.RETAILERSKU
        AND S.WEEKID = P.WEEKID
  WHERE S.RETAILPRICE <> P.RETAILPRICE
  LIMIT 10;
 
 
 SELECT S.RETAILERID,
       S.RETAILERSKU,
       S.WEEKID,
       CONCAT(COALESCE(S.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(S.RETAILERID::VARCHAR,''),
           '~',COALESCE(S.WEEKID::VARCHAR,'')) AS SLS_KEY,
       S.RETAILPRICE AS SALES_RETAILPRICE,
       P.RETAILPRICE AS PROMOTIONS_RETAILPRICE
  FROM "PROD_RAW"."STACKLINE"."SALES" S INNER JOIN "PROD_RAW"."STACKLINE"."PROMOTIONS" P
         ON S.RETAILERID = P.RETAILERID
        AND S.RETAILERSKU = P.RETAILERSKU
        AND S.WEEKID = P.WEEKID
  WHERE S.RETAILPRICE <> P.RETAILPRICE
    AND SLS_KEY = 'B093Q66QQX~1~202210'
  LIMIT 10
  
  desc table "PROD_RAW"."STACKLINE"."SALES"
    desc table "PROD_RAW"."STACKLINE"."PROMOTIONS"

  
  
  
  SELECT *
  FROM TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
  WHERE SRC_SYS_KEY = 'STACKLINE'
    AND PRC_COMPTTR_SLS_KEY = 'B093Q66QQX~1~202210';
 
WITH STACKLINE_RETAILERS_SALES AS( 
 SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO
    FROM "DEV_RAW"."STACKLINE".SALES WHERE WEEKID >= 202231
  union
  SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO
    FROM "DEV_RAW"."STACKLINE"."RATINGSREVIEWS" WHERE WEEKID >= 202231
 )
 SELECT COUNT(*) FROM  STACKLINE_RETAILERS_SALES
SELECT * FROM STACKLINE_RETAILERS_SALES,
  STACKLINE_RETAILERS_PROMOTION AS(SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO
    FROM "DEV_RAW"."STACKLINE".PROMOTIONS WHERE WEEKID >= 202231)
  UNION ALL                                                         
  STACKLINE_RETAILERS_RATING AS(SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO 
    FROM "DEV_RAW"."STACKLINE".RATINGSREVIEWS WHERE WEEKID >= 202231)
  UNION ALL                                                      
  STACKLINE_RETAILERS_CONTENT AS(SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID,     RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO
    FROM "DEV_RAW"."STACKLINE".CONTENTSCORE HERE WEEKID >= 202231)
 ) 
 LEFT OUTER JOIN STACKLINE_RETAILERS_SALES AS  SA
        ON R.RETAILERID = SA.RETAILERID
       AND R.RETAILERSKU = SA.RETAILERSKU
       AND R.WEEKID = SA.WEEKID
       and WHERE ROW_NO = 1
  LEFT OUTER JOIN STACKLINE_RETAILERS_RATING AS  RR
        ON R.RETAILERID = RR.RETAILERID
       AND R.RETAILERSKU = RR.RETAILERSKU
       AND R.WEEKID = RR.WEEKID
  LEFT OUTER JOIN STACKLINE_RETAILERS_CONTENT AS  CS
        ON R.RETAILERID = CS.RETAILERID
       AND R.RETAILERSKU = CS.RETAILERSKU
       AND R.WEEKID = CS.WEEKID
  LEFT OUTER JOIN STACKLINE_RETAILERS_PROMOTION AS  P
        ON R.RETAILERID = P.RETAILERID
       AND R.RETAILERSKU = P.RETAILERSKU 

  AND ROW_NO = 1;

-- ADVANCE


SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO FROM "DEV_RAW"."STACKLINE".SALES limit 10
UNION 
SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO FROM "DEV_RAW"."STACKLINE".RATINGSREVIEWS LIMIT 10 

 
SELECT count(*) FROM "DEV_RAW"."STACKLINE".SALES  
UNION ALL 
SELECT COUNT(*) FROM "DEV_RAW"."STACKLINE".PROMOTIONS
UNION ALL 
SELECT COUNT(*) FROM "DEV_RAW"."STACKLINE".RATINGSREVIEWS
UNION ALL 
SELECT COUNT(*) FROM "DEV_RAW"."STACKLINE".CONTENTSCORE



 WITH STACKLINE_RETAILERS AS(
  SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO 
  FROM "DEV_RAW"."STACKLINE"."SALES"
  WHERE WEEKID >= 202231 
  UNION 
  SELECT *, ROW_NUMBER() OVER(PARTITION BY RETAILERID, RETAILERSKU, WEEKID 
  ORDER BY  RETAILERID, RETAILERSKU, WEEKID, ROW_SQN DESC) AS ROW_NO 
  FROM "DEV_RAW"."STACKLINE"."RATINGSREVIEWS"
  WHERE WEEKID >= 202231
 )
SELECT COUNT(*) FROM STACKLINE_RETAILERS R 
LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."SALES" AS  SA
        ON R.RETAILERID = SA.RETAILERID
       AND R.RETAILERSKU = SA.RETAILERSKU
       AND R.WEEKID = SA.WEEKID
       AND  ROW_NO = 1
LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."RATINGSREVIEWS" AS  RR
        ON R.RETAILERID = RR.RETAILERID
       AND R.RETAILERSKU = RR.RETAILERSKU
       AND R.WEEKID = RR.WEEKID 
       AND  ROW_NO = 1 

WITH STACKLINE_RETAILERS AS(
  SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "DEV_RAW"."STACKLINE"."SALES"
  WHERE WEEKID >= 202230 
  UNION all
  SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "DEV_RAW"."STACKLINE"."RATINGSREVIEWS"
  WHERE WEEKID >= 202230 
 )
SELECT COUNT(*) FROM STACKLINE_RETAILERS R 
LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."SALES" AS  SA
        ON R.RETAILERID = SA.RETAILERID
       AND R.RETAILERSKU = SA.RETAILERSKU
       AND R.WEEKID = SA.WEEKID
       
LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."RATINGSREVIEWS" AS  RR
        ON R.RETAILERID = RR.RETAILERID
       AND R.RETAILERSKU = RR.RETAILERSKU
       AND R.WEEKID = RR.WEEKID 
      
      
SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "PROD_RAW"."STACKLINE"."SALES"
  WHERE WEEKID >= 202231 
union all
SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
  WHERE WEEKID >= 202231 
UNION ALL 
SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
  WHERE WEEKID >= 202231
UNION ALL 
SELECT  RETAILERID, RETAILERSKU, WEEKID 
  FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
  WHERE WEEKID >= 202231
SELECT  CS.RETAILERID, CS.RETAILERSKU, CS.WEEKID 
  FROM "DEV_RAW"."STACKLINE"."CONTENTSCORE" as CS 
LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."SALES" SA
        ON cs.RETAILERID = SA.RETAILERID
       AND cs.RETAILERSKU = SA.RETAILERSKU
       AND cs.WEEKID = SA.WEEKID
       AND CS.WEEKID >= 202231


-- ORIGINAL VIEW CODE
WITH STACKLINE_RETAILERS AS 
( SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "DEV_RAW"."STACKLINE"."SALES"
  WHERE WEEKID >= 202231
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "DEV_RAW"."STACKLINE"."PROMOTIONS"
  WHERE WEEKID >= 202231
  UNION 
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "DEV_RAW"."STACKLINE"."RATINGSREVIEWS"
  WHERE WEEKID >= 202231
  UNION
  SELECT RETAILERID,
         RETAILERSKU,
         WEEKID
  FROM "DEV_RAW"."STACKLINE"."CONTENTSCORE"
  
)
SELECT * FROM  STACKLINE_RETAILERS AS R 
 
  LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."SALES" AS SA
        ON R.RETAILERID = SA.RETAILERID
       AND R.RETAILERSKU = SA.RETAILERSKU
       AND R.WEEKID = SA.WEEKID
  LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."RATINGSREVIEWS" AS RR
        ON R.RETAILERID = RR.RETAILERID
       AND R.RETAILERSKU = RR.RETAILERSKU
       AND R.WEEKID = RR.WEEKID
  LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."CONTENTSCORE" AS CS
        ON R.RETAILERID = CS.RETAILERID
       AND R.RETAILERSKU = CS.RETAILERSKU
       AND R.WEEKID = CS.WEEKID
  LEFT OUTER JOIN "DEV_RAW"."STACKLINE"."PROMOTIONS" AS P
        ON R.RETAILERID = P.RETAILERID
       AND R.RETAILERSKU = P.RETAILERSKU 
       AND R.WEEKID = P.WEEKID


--stackline source and target
select count(*) AS TARGETCOUNT  from "DEV_EDW"."EDW_DBT_VIEWS"."EDW_PRICING_COMPETITOR_SALES_STACKLINE_TMP1"
select count(*) AS TARGETCOUNT  from "DEV_EDW"."EDW_DBT_VIEWS"."EDW_PRICING_COMPETITOR_SALES_STACKLINE_TMP1"
SELECT count(*) as Target_Count  from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES where SRC_SYS_KEY = 'PROWL';
-- 31921475

use database dev_edw

-- TEST DATABASE
 use database test_EDW
 select * from test_EDW.
 use schema CONSOLIDATED
 desc table "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
 SELECT count(*) as Target_Count  from DEV_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES where SRC_SYS_KEY = 'SEQUENTUM';

 SELECT COUNT(*) AS TARGETCOUNT FROM "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" WHERE SRC_SYS_KEY = 'PROWL' 

SELECT COUNT(*) FROM "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" WHERE SRC_SYS_KEY = 'STACKLINE' and PRC_EFF_START_DTE >= '202231' and PRC_EFF_END_DTE >= '202231'
desc table "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
SELECT COUNT(*) AS SOURCECOUNT FROM "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" WHERE SRC_SYS_KEY = 'PROWL' and COUNTRY_ISO_CODE ='CANADA'
select count(*)  AS SOURCECOUNT from "PROD_RAW"."PROWL"."PROWL_FULL_URL_LIST_CANADA" where REPORTS = 'Y'
select count(*)  AS SOURCECOUNT from "PROD_RAW"."PROWL"."PROWL_FULL_URL_LIST_US" where REPORTS = 'Y'
show primary keys in "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
desc table "TEST_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
desc table "TEST_RAW"."STACKLINE"."SALES"
select count(*)  AS SOURCECOUNT from "PROD_RAW"."STACKLINE"."SALES" 

-- CHECK FOR NULL VALUES FOR KEYS
select * from (select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY from  TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
where PRC_COMPTTR_SLS_KEY is not null and SRC_SYS_KEY IS NOT null and SRC_SYS_KEY = 'STACKLINE' ) 

-- CHECK FOR DUPLICATES
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,COUNT(*) from  TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
where PRC_COMPTTR_SLS_KEY is not null and SRC_SYS_KEY IS NOT null and SRC_SYS_KEY = 'PROWL' GROUP BY 1,2

-- chck for flags and expiry date
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,min(EFF_DTE), max(EXPR_DTE),CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG
from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
group by PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG HAVING SRC_SYS_KEY = 'PROWL'
-- check for flags
select CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
where SRC_SYS_KEY = 'PROWL' 

-- chk for currency and loaddts
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,ZONE3_LOD_DTE as LOADDTS,CRNCY_KEY,CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG
from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
group by PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,ZONE3_LOD_DTE,CRNCY_KEY,CURR_RCRD_FLAG,ORP_RCRD_FLAG,DEL_FROM_SRC_FLAG HAVING SRC_SYS_KEY = 'PROWL'

-- check for brnad_lkey , sbu_lkey
select PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,BRAND_LKEY,SBU_LKEY
from TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
group by PRC_COMPTTR_SLS_KEY,SRC_SYS_KEY,BRAND_LKEY,SBU_LKEY HAVING SRC_SYS_KEY = 'PROWL'


--production queries
use database prod_edw
use schema consolidated
use database prod_raw
desc table "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
SELECT * FROM "SEQUENTUM"."PUBLIC"."LOWES_COMPR_PRODUCTS" LIMIT 200
select * from "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" WHERE SRC_SYS_KEY = 'SEQUENTUM' LIMIT 100
select modelnumber from  "PROD_RAW"."STACKLINE"."SALES" limit 100

DESC TABLE  TEST_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
--target count
select COUNT(*) from "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" where SRC_SYS_KEY = 'PROWL'
select COUNT(*) AS TARGET_COUNT from "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" where SRC_SYS_KEY = 'SEQUENTUM'
select COUNT(*) AS TARGET_COUNT from "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" where SRC_SYS_KEY = 'STACKLINE'

--prowl (source count)
select COUNT(*) from "PROD_RAW"."PROWL"."PROWL_FULL_URL_LIST_CANADA" where reports = 'Y'
union
select COUNT(*) from "PROD_RAW"."PROWL"."PROWL_FULL_URL_LIST_US" where reports = 'Y'

--unit test query
select MODEL_NAME, LOADSTATUS, ROWREAD, ROWINSERTED, ROWUPDATED, ERROR_DESCRIPTION, job_time_start, job_time_end 
from "PROD_EDW"."CONSOLIDATED"."LOGGING" where LID in 
(Select SID from "PROD_EDW"."CONSOLIDATED"."METADATELOADDT" where SYSTEM_NAME LIKE '%PROWL%') 
and MODEL_NAME like '%PRICING%' and ERROR_DESCRIPTION IS NULL and LOADSTATUS='END' 
order by job_time_start desc 

--sequentum (source sount)
WITH DEDUPE_SRC_AMZ_US as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_AMAZON_US_COMPR_PRODUCTS
), DEDUPE_SRC_AMZ_CA as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMMODELNUMBER, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_AMAZON_CA_COMPR_PRODUCTS
  ), DEDUPE_SRC_LS_PRC as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_LOWES_PRICING
), DEDUPE_SRC_HD_PRC as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY SKU, MODELNUMBER, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_HOMEDEPOT_PRICING
), DEDUPE_SRC_HD_COMPR as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_HOMEDEPOT_COMPR_PRODUCTS
), DEDUPE_SRC_LS_COMPR as (
    SELECT *,
           ROW_NUMBER() OVER(PARTITION BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE
                             ORDER BY INTERNETNR, MODELNR, ITEMBRAND, ITEMURL, RUNDATE, ROW_SQN DESC) AS ROW_NO
    FROM PROD_RAW.SEQUENTUM.VW_LOWES_COMPR_PRODUCTS
)
SELECT 'AMZ_US', COUNT(*) AS SOURCECOUNT
FROM DEDUPE_SRC_AMZ_US --1
WHERE ROW_NO = 1
UNION ALL
SELECT 'AMZ_CA', COUNT(*)
FROM DEDUPE_SRC_AMZ_CA --2
WHERE ROW_NO = 1
UNION ALL
SELECT 'HD_PRC', COUNT(*)
FROM DEDUPE_SRC_HD_PRC --3
WHERE ROW_NO = 1
UNION ALL
SELECT 'LS_PRC', COUNT(*)
FROM DEDUPE_SRC_LS_PRC --4
WHERE ROW_NO = 1
UNION ALL
SELECT 'HD_COMPR', COUNT(*)
FROM DEDUPE_SRC_HD_COMPR --5
WHERE ROW_NO = 1
UNION ALL
SELECT 'LS_COMPR', COUNT(*)
FROM DEDUPE_SRC_LS_COMPR --6
WHERE ROW_NO = 1;

--unit test query
select MODEL_NAME, LOADSTATUS, ROWREAD, ROWINSERTED, ROWUPDATED, ERROR_DESCRIPTION, job_time_start, job_time_end 
from "PROD_EDW"."CONSOLIDATED"."LOGGING" where LID in 
(Select SID from "PROD_EDW"."CONSOLIDATED"."METADATELOADDT" where SYSTEM_NAME LIKE '%SEQUENTUM%') 
and MODEL_NAME like '%PRICING%' and ERROR_DESCRIPTION IS NULL and LOADSTATUS='END' 
order by job_time_start desc 

-- stackline (source count)
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE"
UNION
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."SALES"
UNION
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."PROMOTIONS"
UNION
SELECT COUNT(*) FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS"
SELECT * FROM "PROD_RAW"."STACKLINE"."SALES" WHERE WEEKID ='202223' LIMIT 10


with output as (
select RCRD_HASH_KEY from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(S.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(S.RETAILERID::VARCHAR,''),
           '~',COALESCE(S.WEEKID::VARCHAR,''),
           '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."SALES" AS S) 
UNION
select RCRD_HASH_KEY from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(P.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(P.RETAILERID::VARCHAR,''),
           '~',COALESCE(P.WEEKID::VARCHAR,''),
           '~',COALESCE(P.PROMOTYPE::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."PROMOTIONS" AS P) 
UNION 
select RCRD_HASH_KEY from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE'   AND RCRD_HASH_KEY IN 
(SELECT(md5(CONCAT(COALESCE(R.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(R.RETAILERID::VARCHAR,''),
           '~',COALESCE(R.WEEKID::VARCHAR,''),
             '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."RATINGSREVIEWS" AS R)
UNION
select RCRD_HASH_KEY from PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES 
WHERE SRC_SYS_KEY = 'STACKLINE' AND RCRD_HASH_KEY  IN 
(SELECT(md5(CONCAT(COALESCE(CS.RETAILERSKU::VARCHAR,''),
           '~',COALESCE(CS.RETAILERID::VARCHAR,''),
           '~',COALESCE(CS.WEEKID::VARCHAR,''),
             '~',COALESCE('#'::VARCHAR,''))))
FROM "PROD_RAW"."STACKLINE"."CONTENTSCORE" AS CS)
)
SELECT COUNT(*) as SOURCE_COUNT, sum(0) as TARGET_COUNT FROM  output  AS R
UNION ALL
SELECT SUM(0) as SOURCE_COUNT, COUNT(*) as TARGET_COUNT FROM PROD_EDW.CONSOLIDATED.EDW_PRICING_COMPETITOR_SALES
  where SRC_SYS_KEY = 'STACKLINE'
    and CURR_RCRD_FLAG = 'Y'
    
    


--unit test query
select MODEL_NAME, LOADSTATUS, ROWREAD, ROWINSERTED, ROWUPDATED, ERROR_DESCRIPTION, job_time_start, job_time_end 
from "PROD_EDW"."CONSOLIDATED"."LOGGING" where LID in 
(Select SID from "PROD_EDW"."CONSOLIDATED"."METADATELOADDT" where SYSTEM_NAME LIKE '%STACKLINE%') 
and MODEL_NAME like '%PRICING%' and ERROR_DESCRIPTION IS NULL and LOADSTATUS='END' 
order by job_time_start desc

-- 8.11.2022

desc table "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES"
SELECT * FROM "SEQUENTUM"."PUBLIC"."LOWES_COMPR_PRODUCTS" LIMIT 200
select * from "PROD_EDW"."CONSOLIDATED"."EDW_PRICING_COMPETITOR_SALES" WHERE SRC_SYS_KEY = 'SEQUENTUM' LIMIT 100
select modelnumber from  "PROD_RAW"."STACKLINE"."SALES" limit 100






