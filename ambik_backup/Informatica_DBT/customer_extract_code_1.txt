{{ config(
   materialized = 'incremental',
   tag = ['dimension'],
   unique_key = 'customer_id',
   pre_hook= 'create sequence if not exists public.pm_primarykey as int
   start 1
   increment 1;'
)
}}

with source as(
select  distinct
    "customer_id",
    "first_name",
    "last_name",
    "address",
    "city",
    "state",
    "zip_code",
    "marital_status"
from  {{ref('stg_customer_extract')}}
),

sq_customer_extract as(
select  distinct
    "customer_id",
    "first_name",
    "last_name",
    "address",
    "city",
    "state",
    "zip_code",
    "marital_status"
    from source
),
{% if is_incremental() %} 
lkp_customers as(
     
     select 0 as "pm_primarykey",
           '110' as "customer_id",
           'amrita' as "first_name",
           'shaji' as "last_name",
           'layout' as  "address",
           'bangalore' as  "city",
           'karnataka' as  "state",
           '560078' as  "zip_code",
           'M' as  "marital_status"
  
    union all
    select 
     d."pm_primarykey",
     d."customer_id",
     d."first_name" ,
     d."last_name",
     d."address",
     d."city",
     d."state",
     d."zip_code",
     d."marital_status"
     from {{ this }} d
     left join sq_customer_extract s
     on s."customer_id"  = d."customer_id"
    
),
{% endif %}

exp_detectchanges as (
 select
     l."pm_primarykey",
     s."address",
     l."address" as "pm_prev_address",
     S."city",
     l."city" as "pm_prev_city",
     s."first_name",
     l."first_name" as "pm_prev_first_name",
     s."last_name",
     l."last_name" as "pm_prev_last_name",
     s."marital_status",
     l."marital_status" as "pm_prev_marital_status",
     s."state",
     l."state" as "pm_prev_state",
     s."zip_code",
     l."zip_code" as "pm_prev_zip_code",
      current_timestamp as "effective_date"
     from sq_customer_extract s left join 
     lkp_customers l
     on s."first_name" = l."first_name"
 ),

RTR_Decide_Update_old_records as(
     select
     l."pm_primarykey" as "prev_pm_primarykey",
     s."customer_id",
     s."first_name",
     s."last_name",
     s."address",
     s."city",
     s."state",
     s."zip_code",
     s."marital_status",
     e."effective_date"
     from 
     lkp_customers l left join sq_customer_extract s  
     on l."first_name" = s."first_name"
     left join exp_detectchanges e
     on e."pm_primarykey" = l."pm_primarykey"
     where l."pm_primarykey" is not null
 ),

RTR_Decide_Insert_new_records as(
  select
     l."pm_primarykey" as "prev_pm_primarykey",
     s."customer_id",
     s."first_name",
     s."last_name",
     s."address",
     s."city",
     s."state",
     s."zip_code",
     s."marital_status",
     e."effective_date"
     from 
     lkp_customers l  
     left join sq_customer_extract s  
     on l."first_name" = s."first_name"
     left join exp_detectchanges e
     on e."pm_primarykey" = l."pm_primarykey"
    {% if is_incremental() %}
     where l."pm_primarykey" is  null
     {% endif %}
),


upd_insert_dim_cus_ext as(
    select
       -- "systemdate",
        
        "prev_pm_primarykey",
        "customer_id",
        "first_name",
        "last_name",
        "address",
        "city",
        "state",
        "zip_code",
        "marital_status"
        from RTR_Decide_Insert_new_records
),

{% if is_incremental() %}
upd_update_dim_cus_ext as(
    select
       
       -- "systemdate",
        "prev_pm_primarykey",
        "customer_id",
        "first_name",
        "last_name",
        "address",
        "city",
        "state",
        "zip_code",
        "marital_status"
        from RTR_Decide_Update_old_records
       
),
{% endif %}

dim_cust_ext as(
        select
        *,
        current_timestamp as "dw_insert_dt",
        current_timestamp as "dw_update_dt",
        concat("prev_pm_primarykey","customer_id") as "md5_checksum",
        'I' as "cdc_flag"
        from  
        upd_insert_dim_cus_ext 
       {% if is_incremental() %}
        union all
        select 
        *,
        current_timestamp as "dw_insert_dt",
        current_timestamp as "dw_update_dt",
        concat("prev_pm_primarykey","customer_id") as "md5_checksum",
        'U' AS "cdc_flag"
        from  
        upd_update_dim_cus_ext
        {% endif %} 

)
select * from dim_cust_ext






